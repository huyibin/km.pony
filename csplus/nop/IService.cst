<%-- 
Name:IService for CRUD + S
Author: hu@blogQ.com.cn
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Description="Create packing list from XML PO." %>
<%@ XmlProperty Name="Entity" Schema="entity.xsd" Optional="False" Category="Data" Description="Purchase Order to generate packing list for." %>
<%@ Assembly Name="System.Design" %>
<%@ Import Namespace="System.Text" %>

<%
StringBuilder builder = new StringBuilder();
string initial = Entity.Name.Substring(0,1);
string others = Entity.Name.Substring(1);
builder.Append(initial.ToLower()).Append(others);


string entityName = Entity.Name;
string entityVariable = Entity.Name.Substring(0,1).ToLower() + Entity.Name.Substring(1);
string entityCollection = Entity.CollectionName;
string entityCollectionVariable = Entity.CollectionName.Substring(0,1).ToLower() + Entity.CollectionName.Substring(1);

%>
//============================================================
//  DESCRIPTION
//============================================================
// FileName : I<%=Entity.Name%>Service
//
//
//
//============================================================
//  Generated by CodeSmith
//  Date:<%=DateTime.Now %>
//============================================================

namespace Dragonfly.Services.<%=Entity.Namespace %>
{
    using Dragonfly.Core;
    using Dragonfly.Core.Domain.<%=Entity.Namespace%>;
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// <%=entityName%> service interface
    /// </summary>
    public partial interface I<%=entityName%>Service
    {
        /// <summary>
        /// Deletes a <%=entityVariable%>
        /// </summary>
        /// <param name="<%=entityVariable%>"><%=entityName%></param>
        void Delete<%=entityName%>(<%=entityName%>  <%=entityVariable%>);

        /// <summary>
        /// Gets a <%=entityVariable%>
        /// </summary>
        /// <param name="<%=entityVariable%>Id"><%=entityName%> identifier</param>
        /// <returns><%=entityName%></returns>
        <%=entityName%>  Get<%=entityName%>ById(Guid <%=entityVariable%>Id);
        
        /// <summary>
        /// Gets a <%=entityVariable%>
        /// </summary>
        /// <param name="<%=entityVariable%>Ids"><%=entityName%> identifier</param>
        /// <returns><%=entityCollection%></returns>
        IList<<%=entityName%>>  Get<%=entityCollection%>ByIds(Guid[] <%=entityVariable%>Ids);

        /// <summary>
        /// Gets all <%=entityCollection %>
        /// </summary>
        /// <returns><%=entityCollection%></returns>
        IList<<%=entityName%>> GetAll<%=entityCollection%>();
        
         /// <summary>
        /// Search all <%=entityCollection %>
        /// </summary>
        /// <returns><%=entityCollection%></returns>
        IPagedList<<%=entityName%>> Search<%=entityCollection%>(int pageIndex, int pageSize);

        /// <summary>
        /// Creates a <%=entityVariable%>
        /// </summary>
        /// <param name="<%=entityVariable%>"><%=entityName%></param>
        void Create<%=entityName%>(<%=entityName%>  <%=entityVariable%>);

        /// <summary>
        /// Updates the <%=entityVariable%>
        /// </summary>
        /// <param name="<%=entityVariable%>"><%=entityName%></param>
        void Update<%=entityName%>(<%=entityName%>  <%=entityVariable%>);
        
        
         <%foreach(var attr in Entity.Attributes){
            if(attr.Name == "Deleted")
            {               
                %>
        
        /// <summary>
        /// Remove the <%=entityVariable%>
        /// </summary>
        /// <param name="<%=entityVariable%>"></param>
        void Remove<%=entityName%>(<%=entityName%> <%=entityVariable%>);
        
        
         <%
             break;
            }
           
            }%>
            
        <%foreach(var attr in Entity.Attributes){
            if(attr.IsFKey)
            {
                var fKeyName = attr.Name;
                var fkVariable = GetInitial(attr.Name);
                %>
        /// <summary>
        /// Gets <%=entityCollection %> By <%=fKeyName %>
        /// </summary>
        /// <returns><%=entityCollection%></returns>
        IPagedList<<%=entityName%> > Get<%=entityCollection%>By<%=fKeyName%>(Guid <%=fkVariable%>, int pageIndex, int pageSize);
        
        <%
            }
        } %>
    }
}


<script runat="template">
public string GetInitial(string src){
    StringBuilder builder = new StringBuilder();
    string initial = src.Substring(0,1);
    string others = src.Substring(1);
    builder.Append(initial.ToLower()).Append(others);
    return builder.ToString();
    
}
</script>