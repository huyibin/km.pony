<%-- 
Name:listmodel
Author: huyibin@outlook.com
Description: 
--%>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Description="Create packing list from XML PO." %>
    
<%@ Assembly Name="System.Design" %>
<%@ Assembly Name="System.Data" %>

<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text" %>
<%@ XmlProperty Name="Entity" Schema="../../entity.xsd" Optional="False" Category="Data" Description="" %>

<%-- --%>
namespace Dragonfly.<%=Entity.PresentationNS%>.Models.<%=Entity.Name%>s
{
    using Dragonfly.Web.Framework.Mvc;
    using Dragonfly.Web.Framework.UI.Paging;
    using System.Collections.Generic;

    public partial class <%=Entity.Name%>ListModel : BaseNopModel
    {
        public <%=Entity.Name%>ListModel()
        {
            <%=Entity.Name%>Items = new List<<%=Entity.Name%>ItemModel>();
            PagingFilteringContext = new <%=Entity.Name%>PagingFilteringModel();
        }

        public IList<<%=Entity.Name%>ItemModel> <%=Entity.Name%>Items { get; set; }
        public <%=Entity.Name%>PagingFilteringModel PagingFilteringContext { get; set; }        
    }
    
    public partial class <%=Entity.Name%>PagingFilteringModel : BasePageableModel{}
}

             
<script runat="template">
public string GetProperty(string nativeType,string name,bool isNull)
 {
     string type = nativeType.Trim().ToLower();
      StringBuilder builder = new StringBuilder();
     switch(type)
     {
         case "int":
         case "decimal":
         case "datetime":
         case "bool":
         case "guid":
             if (isNull)
                builder.AppendFormat("public {0}? {1}{{get;set;}}",nativeType,name);
             else
                builder.AppendFormat("public {0} {1}{{get;set;}}",nativeType,name);
             break;
         default:
             builder.AppendFormat("public {0} {1}{{get;set;}}",nativeType,name);
             break;
     }
     
     return builder.ToString();
            
}
</script>